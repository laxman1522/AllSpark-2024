{"version":3,"file":"static/js/776.fce11576.chunk.js","mappings":"0MACA,EAAqC,wCAArC,EAA4F,kC,uCCStFA,EAAc,SAACC,GACnB,IAAMC,EAAcD,EAAMC,YACpBC,EAAcF,EAAME,YAC1BC,GAAsDC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7DI,EAAoBF,EAAA,GAAEG,EAAqBH,EAAA,GAClDI,GAAoDL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzDE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAE5CG,EAAW,GACfC,OAAOC,KAAKd,GAAae,SAAQ,SAACC,GAC7BhB,EAAYgB,GAAKC,QACnBL,EAAQ,GAAAM,QAAAC,EAAAA,EAAAA,GAAOP,GAAQ,CAACZ,EAAYgB,KACvC,IACAJ,EAASQ,MAAK,SAACC,EAAGC,GAAC,OAAMD,EAAEE,KAAOD,EAAEC,KAAO,GAAK,CAAC,IAEjD,IAgBMC,GAAiBC,EAAAA,EAAAA,QAAO,MAM9B,OALAC,EAAAA,EAAAA,YAAU,WACsC,IAA3Cb,OAAOC,KAAKJ,GAAoBiB,QACjCH,EAAeI,QAAQC,eAAe,CAACC,MAAO,SAClD,GAAE,CAACpB,KAGDqB,EAAAA,EAAAA,MAAA,OAAKC,IAAKR,EAAgBS,UAAWC,EAA0BC,SAAA,EAC3D7B,IACA8B,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CACZ9B,sBAAuBA,EACvBD,qBAAsBA,EACtBgC,cAAe5B,KAGnB0B,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACC,MAAOC,EAAAA,EAAoBC,WACtCN,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBE,SACjCvB,EAAS+B,KAAI,SAACC,EAASC,GACtB,IAAQC,EAAuCF,EAAvCE,SAAUvB,EAA6BqB,EAA7BrB,KAAIwB,EAAyBH,EAAvBI,YAAAA,OAAW,IAAAD,EAAG,KAAIA,EAC1C,OACEX,EAAAA,EAAAA,KAAA,OACEH,UAAS,gBAAAf,OAAkBgB,GAC3Be,QAAS,YAtCK,SAACJ,GACzBtC,GAAsB,GAGtB,IAAI2C,EAAatC,EAASiC,GAEtBM,EAAwB,CAC1B5B,KAAM2B,EAAW3B,KACjB6B,KAAMF,EAAWjC,MACjBoC,MAAOH,EAAWJ,SAClBQ,QAASJ,EAAWK,UACpBtD,YAAaA,GAGfU,EAAsBwC,EACxB,CAwBcK,CAAkBX,EACpB,EAAEV,UAEFC,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,SAAUZ,EACVvB,KAAMA,EACNyB,YAAaA,KAJVH,EAQX,QAIR,EAEA,EAAec,EAAAA,KAAW7D,E","sources":["webpack://all_spark_website_2022/./src/container/speakerPage/SpeakerPage.module.scss?7322","container/speakerPage/SpeakerPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SpeakerPageWrapper\":\"SpeakerPage_SpeakerPageWrapper__K7EoP\",\"imageWrapper\":\"SpeakerPage_imageWrapper__Yc2ff\"};","/**\n * Author(s) : Gurudharshan N\n * Purpose : This is speaker page component contains all speaker cards.\n */\nimport styles from \"./SpeakerPage.module.scss\";\nimport React,{useRef, useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { SpeakerDetail, Image, PageTitle } from '../../components/index';\nimport { PAGE_TITLE_CONSTANT } from '../../constants/page-constants';\n\nconst SpeakerPage = (props) => {\n  const speakerData = props.speakerData;\n  const sessionData = props.sessionData;\n  const [isSpeakerDetailClose, setSpeakerDetailClose] = useState(true);\n  const [speakerDetailValue, setSpeakerDetailValue] = useState({});\n\n  let speakers = [];\n  Object.keys(speakerData).forEach((key) => {\n    if(speakerData[key].email) \n     speakers = [...speakers,speakerData[key]]\n  });\n  speakers.sort((a, b) => (a.name > b.name ? 1 : -1));\n\n  const openSpeakerDetail = (index) => {\n    setSpeakerDetailClose(false);\n\n    //getting onbject\n    let speakerObj = speakers[index];\n    //setting values\n    let speakerDetailValueobj = {\n      name: speakerObj.name,\n      mail: speakerObj.email,\n      image: speakerObj.imageUrl,\n      session: speakerObj.sessionId,\n      sessionData: sessionData,\n    };\n\n    setSpeakerDetailValue(speakerDetailValueobj);\n  };\n  const speakerPageRef = useRef(null);\n  useEffect(()=>{\n    if(Object.keys(speakerDetailValue).length === 0)\n      speakerPageRef.current.scrollIntoView({block: 'start'});\n  },[speakerDetailValue]);\n\n  return (\n    <div ref={speakerPageRef} className={styles.SpeakerPageWrapper}>\n      {!isSpeakerDetailClose && (\n        <SpeakerDetail\n          setSpeakerDetailClose={setSpeakerDetailClose}\n          isSpeakerDetailClose={isSpeakerDetailClose}\n          speakerDetail={speakerDetailValue}\n        />\n      )}\n      <PageTitle label={PAGE_TITLE_CONSTANT.SPEAKER} />\n      <div className=\"imageCardsContainer\">\n        {speakers.map((speaker, index) => {\n          const { imageUrl, name, designation = null } = speaker;\n          return (\n            <div\n              className={`imageWrapper ${styles.imageWrapper}`}\n              onClick={() => {\n                openSpeakerDetail(index);\n              }}\n              key={index}>\n              <Image\n                imageURL={imageUrl}\n                name={name}\n                designation={designation}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(SpeakerPage);\n\nSpeakerPage.propTypes = {\n  speakerData: PropTypes.object,\n  sessionData: PropTypes.object,\n};\n"],"names":["SpeakerPage","props","speakerData","sessionData","_useState","useState","_useState2","_slicedToArray","isSpeakerDetailClose","setSpeakerDetailClose","_useState3","_useState4","speakerDetailValue","setSpeakerDetailValue","speakers","Object","keys","forEach","key","email","concat","_toConsumableArray","sort","a","b","name","speakerPageRef","useRef","useEffect","length","current","scrollIntoView","block","_jsxs","ref","className","styles","children","_jsx","SpeakerDetail","speakerDetail","PageTitle","label","PAGE_TITLE_CONSTANT","SPEAKER","map","speaker","index","imageUrl","_speaker$designation","designation","onClick","speakerObj","speakerDetailValueobj","mail","image","session","sessionId","openSpeakerDetail","Image","imageURL","React"],"sourceRoot":""}